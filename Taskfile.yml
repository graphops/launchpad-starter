# yaml-language-server: $schema=https://taskfile.dev/schema.json
## NB: Probably don't edit me
## To make pulling upstream launchpad-starter changes seamless, it's recommended
## to add custom Tasks to a Taskfile.ext.yaml to prevent merge conflicts
## Any tasks you add to Taskfile.ext.yaml will be available under the ext group

# https://taskfile.dev/usage/
version: '3'

# For all Tasks, source in these environment variables
dotenv: ['.env']

# Import Taskfiles from launchpad-taskfiles
includes:
  releases:
    taskfile: https://raw.githubusercontent.com/graphops/launchpad-taskfiles/stable/taskfiles/releases.yml
  indexer:
    taskfile: https://raw.githubusercontent.com/graphops/launchpad-taskfiles/stable/taskfiles/indexer.yml
  launchpad:
    taskfile: https://raw.githubusercontent.com/graphops/launchpad-taskfiles/stable/taskfiles/launchpad.yml
  utils:
    taskfile: https://raw.githubusercontent.com/graphops/launchpad-taskfiles/stable/taskfiles/utils.yml
  ext: # Optionally define your own Tasks here
    taskfile: Taskfile.ext.yaml
    optional: true

# Root Task definitions
tasks:
  # Default task will list all available tasks
  default:
    desc: List all available tasks
    silent: true
    cmds:
      - |
        echo "When passing arguments to tasks, remember to preceed them with '--'. Example: task help -- releases:apply"
      - echo
      - task --list

  help:
    desc: "Display help for a task. Usage: help -- <task name>"
    silent: true
    cmds:
      - |
        set - {{.CLI_ARGS}}
        TASK="$1"; shift
        if [ -z "$TASK" ]; then
          echo "You must pass a task as an argument. Example: task help -- task_name"
          echo "To see all available commands, run: task"
          exit 1
        fi
        task --summary $TASK
